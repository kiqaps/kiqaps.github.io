{"version":3,"sources":["styles/global.tsx","i18n/index.ts","components/Header/LangSelector.tsx","components/Header/index.tsx","components/Section/index.tsx","components/HistoryItem/index.tsx","styles/layout.tsx","components/SkillItem/index.tsx","app.tsx","index.tsx","styles/themes.ts"],"names":["GlobaStyles","createGlobalStyle","theme","mainBackgroundColor","mainTextColor","i18n","use","initReactI18next","init","lng","resources","en","translation","enTranslation","pt","ptTranslation","View","styled","ul","ItemView","li","Item","button","actionTextColor","selected","LangSelector","langs","onChangeLanguage","useTranslation","map","label","value","language","onClick","lang","Avatar","img","InfoRow","div","boldTextColor","AboutMeContainer","SocialMediaContainer","span","Header","t","changeLanguage","src","alt","href","SectionView","section","SectionTitle","h3","Section","title","children","HistoryItemView","HistoryItemHeader","HistoryItem","when","description","Container","SkillItemView","SkillItem","content","App","getTranslatedArray","key","items","returnObjects","workExperienceItems","educationItems","skillsItems","item","idx","role","whereAndWhen","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eacb3158.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobaStyles = createGlobalStyle`\n  html {\n    box-sizing: border-box;\n    font-size: 16px;\n    background-color: ${({ theme }) => theme.mainBackgroundColor};\n    color: ${({ theme }) => theme.mainTextColor};\n    font-family: 'Fira Code', monospace;\n  }\n\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n\n  body, h1, h2, h3, h4, h5, h6, p, ol, ul {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n  }\n\n  ol, ul {\n    list-style: none;\n  }\n\n  img {\n    max-width: 100%;\n    height: auto;\n  }\n\n  button {\n    border: none;\n    background: transparent;\n    padding: 0;\n    margin: 0;\n    width: auto;\n    overflow: visible;\n\n    color: inherit;\n    font: inherit;\n    text-align: inherit;\n\n    line-height: normal;\n    font-smooth: inherit;\n    appearance: none;\n  }\n`\n","import i18n from 'i18next'\nimport ptTranslation from './pt/translation.json'\nimport enTranslation from './en/translation.json'\nimport { initReactI18next } from 'react-i18next'\n\ni18n.use(initReactI18next).init({\n  lng: 'pt',\n  resources: {\n    en: { translation: enTranslation },\n    pt: { translation: ptTranslation }\n  }\n})\n","import { FC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\n\nconst View = styled.ul`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  padding: 1rem 15px;\n\n  @media (min-width: 576px) {\n    justify-content: end;\n  }\n`\nconst ItemView = styled.li`\n  @media (min-width: 576px) {\n    &:not(:first-child) {\n      margin-left: 1rem;\n    }\n  }\n`\n\ninterface LangItemProps {\n  selected: boolean\n}\n\nconst Item = styled.button<LangItemProps>`\n  cursor: pointer;\n  color: ${({theme}) => theme.actionTextColor};\n  text-decoration: ${({ selected}) => selected ? 'underline' : 'none'};\n`\n\ninterface LangDefinition {\n  label: string\n  value: string\n}\n\ninterface LangSelectorProps {\n  langs: LangDefinition[]\n  onChangeLanguage?: (lang: string) => void\n}\n\nexport const LangSelector: FC<LangSelectorProps>  = ({ langs = [], onChangeLanguage = null}) => {\n\n  const { i18n } = useTranslation()\n\n  const handleChangeLanguage = (lang: string) => {\n    onChangeLanguage && onChangeLanguage(lang)\n  }\n\n  return <View>\n    {langs.map(({label, value}) =>\n      <ItemView key={value}>\n        <Item selected={i18n.language === value} onClick={() => handleChangeLanguage(value)}>{label}</Item>\n      </ItemView>)}\n  </View>\n}\n","import { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { LangSelector } from \"./LangSelector\";\nimport {GitHub, Linkedin} from 'react-feather'\nimport { useTranslation } from \"react-i18next\";\n\nconst Avatar = styled.img`\n  max-width: 200px;\n  border-radius: 5px;\n  margin-bottom: 1rem;\n`\n\nconst InfoRow = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media (min-width: 576px) {\n    flex-direction: row;\n    justify-content: space-between;\n  }\n\n  & > h1 {\n    text-align: center;\n    color: ${({theme}) => theme.boldTextColor};\n  }\n\n  & strong {\n    color: ${({theme}) => theme.boldTextColor};\n  }\n`\n\nconst AboutMeContainer = styled(InfoRow)`\n  margin-top: 15px;\n  text-align: justify;\n`\n\nconst SocialMediaContainer = styled.span`\n  display: flex;\n\n  & a {\n    cursor: pointer;\n    color: ${({theme}) => theme.actionTextColor};\n\n    &:not(:first-child) {\n      margin-left: 15px;\n    }\n  }\n`\n\nexport const Header: FC = () => {\n  const languages = [\n    {\n      label: 'Português',\n      value: 'pt'\n    },\n    {\n      label: 'English',\n      value: 'en'\n    }\n  ]\n\n  const { t, i18n } = useTranslation()\n\n  const onChangeLanguage = (lang: string) => {\n    i18n.changeLanguage(lang)\n  }\n\n  return <>\n    <LangSelector langs={languages} onChangeLanguage={onChangeLanguage} />\n    <Avatar src=\"https://avatars.githubusercontent.com/kiqaps\" alt=\"Avatar\" />\n\n    <InfoRow>\n      <h1>Caíque Araújo Spósito</h1>\n      <SocialMediaContainer>\n        <a href=\"https://github.com/kiqaps\"><GitHub /></a>\n        <a href=\"https://www.linkedin.com/public-profile/in/ca%C3%ADque-ara%C3%BAjo-sp%C3%B3sito-16066a145\"><Linkedin /></a>\n      </SocialMediaContainer>\n    </InfoRow>\n\n    <InfoRow>\n      <span>{t('role')}</span>\n      <span><strong>E-mail</strong>: kiqaps[at]gmail[dot]com</span>\n    </InfoRow>\n\n    <AboutMeContainer>\n      {t('aboutMe')}\n    </AboutMeContainer>\n  </>\n}\n","import { FC } from \"react\";\nimport styled from \"styled-components\";\n\nconst SectionView = styled.section`\n  width: 100%;\n  margin-top: 1rem;\n  & hr {\n    border: none;\n    height: 1px;\n    background-color: ${({ theme }) => theme.mainTextColor};\n  }\n`\n\nconst SectionTitle = styled.h3`\n  font-weight: 700;\n  color: ${({theme}) => theme.boldTextColor};\n`\n\ninterface SectionProps {\n  title: string\n}\n\nexport const Section: FC<SectionProps> = ({title, children}) => <>\n  <SectionView>\n    <hr />\n    <SectionTitle>{title}</SectionTitle>\n    {children}\n  </SectionView>\n</>\n","import { FC } from \"react\";\nimport styled from \"styled-components\";\n\nconst HistoryItemView = styled.div`\n  margin-top: 15px;\n  padding: 0 0.5rem;\n  & > p {\n    text-indent: 2rem;\n    text-align: justify;\n    margin-top: 10px;\n  }\n\n  @media (min-width: 576px) {\n    padding: 0 2rem;\n  }\n`\n\nconst HistoryItemHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media (min-width: 576px) {\n    flex-direction: row;\n    justify-content: space-between;\n  }\n\n  & span:first-child {\n    font-weight: 600;\n    color: ${({theme}) => theme.boldTextColor};\n  }\n`\n\ninterface HistoryItemProps {\n  title: string\n  when: string\n  description: string\n}\n\nexport const HistoryItem: FC<HistoryItemProps> = ({ title, when, description }) => <HistoryItemView>\n  <HistoryItemHeader>\n    <span>{title}</span>\n    <span>{when}</span>\n  </HistoryItemHeader>\n  <p>\n    {description}\n  </p>\n</HistoryItemView>\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 1360px;\n  padding: 0rem 15px;\n  margin: 0 auto;\n`\n","import { FC } from \"react\";\nimport styled from \"styled-components\";\n\nconst SkillItemView = styled.div`\n  margin-top: 15px;\n  padding: 0 0.5rem;\n\n  @media (min-width: 576px) {\n    padding: 0 2rem;\n  }\n\n  & > p {\n    text-align: justify;\n  }\n\n  &:last-child {\n    margin-bottom: 4rem;\n  }\n`\n\ninterface SkillItemProps {\n  content: string\n}\n\nexport const SkillItem: FC<SkillItemProps> = ({content}) => <SkillItemView><p>{content}</p></SkillItemView>\n","import { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Header } from \"./components/Header\"\nimport { Section } from \"./components/Section\"\nimport { HistoryItem } from \"./components/HistoryItem\"\nimport { Container } from \"./styles/layout\"\nimport { SkillItem } from \"./components/SkillItem\"\n\nexport const App: FC = () => {\n  const { t } = useTranslation()\n\n  const getTranslatedArray = (key: string) => {\n    let items = t(key, { returnObjects: true }) as Array<any>\n    if(typeof items === 'string') {\n      items = []\n    }\n    return items\n  }\n\n  let workExperienceItems = getTranslatedArray('sections.items.work_experience')\n  let educationItems = getTranslatedArray('sections.items.education')\n  let skillsItems = getTranslatedArray('sections.items.skills')\n\n  return <Container>\n    <Header />\n    <Section title={t('sections.titles.work_experience')}>\n      {\n        workExperienceItems.map((item, idx) => <HistoryItem key={idx} title={item.role} when={item.whereAndWhen} description={item.description} />)\n      }\n    </Section>\n    <Section title={t('sections.titles.education')}>\n      {\n        educationItems.map((item, idx) => <HistoryItem key={idx} title={item.role} when={item.whereAndWhen} description={item.description} />)\n      }\n    </Section>\n    <Section title={t('sections.titles.skill')}>\n      {\n        skillsItems.map((item, idx) => <SkillItem key={idx} content={item} />)\n      }\n    </Section>\n  </Container>\n}\n","import ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'styled-components'\nimport { GlobaStyles } from './styles/global'\nimport { defaultTheme } from './styles/themes'\nimport './i18n'\nimport { App } from './app'\n\nReactDOM.render(\n<ThemeProvider theme={defaultTheme}>\n  <App />\n  <GlobaStyles />\n</ThemeProvider>, document.getElementById('root'))\n","import { DefaultTheme } from \"styled-components\";\n\ndeclare module \"styled-components\" {\n  export interface DefaultTheme {\n    mainBackgroundColor: string;\n    mainTextColor: string\n    actionTextColor: string\n    boldTextColor: string\n  }\n}\n\nexport const defaultTheme: DefaultTheme = {\n  mainBackgroundColor: '#fff',\n  mainTextColor: '#5f5f5f',\n  actionTextColor: '#007bff',\n  boldTextColor: '#1f1f1f',\n}\n"],"sourceRoot":""}